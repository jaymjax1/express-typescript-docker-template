name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Type check
      run: yarn typecheck
    
    - name: Lint
      run: yarn lint
    
    - name: Test
      run: yarn test
    
    - name: Build
      run: yarn build

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker compose -f docker-compose.prod.yml build 

  deploy:
    runs-on: ubuntu-latest
    needs: [test, docker]  # Only deploy after tests and docker build pass
    if: github.ref == 'refs/heads/main'  # Only deploy on main branch

    steps:
    - uses: actions/checkout@v4
    
    # Add deployment steps here, for example:
    # - Deploy to AWS:
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    
    # - name: Deploy to ECS
    #   run: |
    #     aws ecs update-service --force-new-deployment ... 